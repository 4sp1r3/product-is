<%

include("../../util/constants.jag");

var log = new Log();

var profile = require('profileClient.jag');

var multitenantUtils = Packages.org.wso2.carbon.utils.multitenancy.MultitenantUtils;

var i18n = session.get("i18n");

function edit(){
	var cookie = session.get('auth-cookie');
	if(cookie == null){
		var cookie = request.getParameter("cookie");
		session.put('auth-cookie', cookie);
	}

	var userName = request.getParameter("user");
	var tenantAwareUserName = multitenantUtils.getTenantAwareUsername(userName);

	var db = null;
	var result = null;

	try{
		var values = profile.getProfileFieldsForInternalStore();
		var fieldValues = values.*::['return'].*::['fieldValues'];

		var req = <mgt:setUserProfile xmlns:mgt="http://mgt.profile.user.identity.carbon.wso2.org" xmlns:xsd="http://mgt.profile.user.identity.carbon.wso2.org/xsd">
		<mgt:username></mgt:username>
		<mgt:profile>
		<xsd:profileConfigurations></xsd:profileConfigurations>
		<xsd:profileConifuration></xsd:profileConifuration>
		<xsd:profileName></xsd:profileName>
		</mgt:profile>
		</mgt:setUserProfile>;

		req.*::['username'].setChildren(tenantAwareUserName);
		var profileName = request.getParameter('profile');
		var profileConfiguration = request.getParameter('profileConfiguration');

		if(profileName == null ){
			throw "profile_name_null"
		}

		profileName = profileName.toString();
		if(profileConfiguration != null){
			profileConfiguration = profileConfiguration.toString();
		}else{
			profileConfiguration = profileName;
		}

		req.*::['profile'].*::['profileName'].setChildren(profileName);
		req.*::['profile'].*::['profileConifuration'].setChildren(profileConfiguration);

		if(userName !== null){
			userName = userName.replace("@carbon.super", "");
		}
		
		var otpList = generateOTPList();

		db = new Database(MYSQL_URL, MYSQL_USERNAME, MYSQL_PASSWORD);
		result = db.query("SELECT * FROM BackupOTPCodes WHERE email = '" + userName + "'");

		if(result.toString() != ""){
			db.query("UPDATE BackupOTPCodes SET backup_codes = '"+ otpList + "'" + " WHERE email = '" + userName + "'");
		} else {
			db.query("INSERT INTO BackupOTPCodes (email, backup_codes) VALUES ('"+ userName + "', '" + otpList + "')");
		}
	} catch(e){
		log.error(e);
		response.sendRedirect("../../index.jag?e=1&error=" + "Unable to update SMS OTP Backup Codes Database");
	} finally {
		if(db != null){
			db.close();
		}
	}
}
edit();

function generateOTPList(){

	var claimOTP ="";
	for (i = 0; i < OTP_COUNT; i++) {
		claimOTP = claimOTP + (Math.floor(Math.random()*900000) +100000).toString() + ",";
	}
	return claimOTP;
}
%>

